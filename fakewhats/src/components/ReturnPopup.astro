---
import { COPY } from '../content/copy';
import { siteConfig } from '../config/site-config';
const { popup } = COPY;
---

<div id="returnPopup" class="return-popup-backdrop" role="dialog" aria-modal="true" aria-label="–í–æ–∑–≤—Ä–∞—Ç –∫ –≤–∏–¥–µ–æ" style="display: none;">
  <div class="return-popup">
    <div class="vsl-container">
      <div class="vsl-overlay">

        <div class="video-wrapper">
          <video id="returnVslVideo" src={siteConfig.images.videos.chatVsl} playsinline preload="metadata" controls webkit-playsinline x-webkit-airplay="allow" x5-video-player-type="h5" x5-video-player-fullscreen="false" x5-video-orientation="portraint"></video>
        </div>
        
        <!-- –í–∏–Ω—å–µ—Ç–∫–∞ –¥–ª—è –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è -->
        <div class="vsl-vignette"></div>
        
        <!-- –ö—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è VSL -->
        <button id="returnVslCloseBtn" style="position: absolute; top: 10px; right: 10px; background: rgba(0, 0, 0, 0.7); color: white; border: none; border-radius: 50%; width: 40px; height: 40px; cursor: pointer; z-index: 20; font-size: 18px; pointer-events: auto;">‚úï</button>
        
        <!-- –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ–≤–µ—Ä–ª–µ–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ -->
        <div class="vsl-text-overlay">
          <div class="popup-text">
            <h3>{siteConfig.texts.popups.returnPopup.title}</h3>
            <p class="consequence">{siteConfig.texts.popups.returnPopup.consequence}</p>
            <p class="solution">{siteConfig.texts.popups.returnPopup.solution}</p>
            <p class="highlight">{siteConfig.texts.popups.returnPopup.highlight}</p>
            <p class="urgency">{siteConfig.texts.popups.returnPopup.urgency}</p>
          </div>
          <div class="popup-buttons">
            <button id="continueWatching" class="btn-primary">{siteConfig.texts.popups.returnPopup.continueButton}</button>
            <button id="textVersion" class="btn-secondary">{siteConfig.texts.buttons.restartVideo}</button>
          </div>
        </div>
        

        
        <!-- –ü–æ–ø–∞–ø –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∏–Ω—É—Ç–µ VSL (—Å–∫—Ä—ã—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ) -->
        <div id="returnVslMidPopup" class="return-vsl-mid-popup" style="display: none;">
          <!-- –ó–µ–ª–µ–Ω–∞—è –ø–ª–∞—à–∫–∞ —Å–≤–µ—Ä—Ö—É -->
          <div class="return-vsl-mid-banner" onclick="showOrderFormModal();" style="cursor: pointer;">
            <div class="return-vsl-mid-vignette"></div>
            <div>{siteConfig.texts.popups.vslMidPopup.title}</div>
            <div style="font-size: 14px; margin-top: 5px;">{siteConfig.texts.popups.vslMidPopup.subtitle}</div>
          </div>
        </div>
        

      </div>
    </div>
  </div>
</div>

<script>
  const returnPopup = document.getElementById('returnPopup');
  const returnVideo = document.getElementById('returnVslVideo');
  const continueBtn = document.getElementById('continueWatching');
  const restartBtn = document.getElementById('textVersion');

  // console.log('üé¨ ReturnPopup elements initialized:', {
  //   returnPopup: !!returnPopup,
  //   returnVideo: !!returnVideo,
  //   continueBtn: !!continueBtn,
  //   restartBtn: !!restartBtn
  // });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –∏–∑ localStorage
  let savedVideoTime = 0;
  
  function loadSavedTime() {
    const savedTimeFromStorage = localStorage.getItem('savedVideoTime');
    if (savedTimeFromStorage) {
      savedVideoTime = parseFloat(savedTimeFromStorage);
    }
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  loadSavedTime();

  function showReturnPopup() {
    // console.log('üé¨ showReturnPopup called');
    // console.log('üé¨ returnPopup element:', returnPopup);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º
    loadSavedTime();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫—Ä—ã—Ç –ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π VSL
    const mainPopup = document.getElementById('popup');
    if (mainPopup && mainPopup.style.display === 'flex') {
      // console.log('üé¨ Main popup is open, returning');
      return;
    }
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º VSL –≤ —á–∞—Ç–µ
    if (window.stopChatVsl) {
      window.stopChatVsl();
    }
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
    if (returnPopup) {
  // console.log('üé¨ Showing returnPopup');
  // console.log('üé¨ returnPopup current display:', returnPopup.style.display);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
      returnPopup.style.display = 'flex';
      returnPopup.style.visibility = 'visible';
      returnPopup.style.opacity = '1';
      returnPopup.style.zIndex = '1001';
      
  // console.log('üé¨ returnPopup display set to flex');
  // console.log('üé¨ returnPopup styles updated');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ø–∞–ø –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–∏–º
      setTimeout(() => {
        const computedStyle = window.getComputedStyle(returnPopup);
  // console.log('üé¨ returnPopup computed display:', computedStyle.display);
  // console.log('üé¨ returnPopup computed visibility:', computedStyle.visibility);
  // console.log('üé¨ returnPopup computed opacity:', computedStyle.opacity);
  // console.log('üé¨ returnPopup computed z-index:', computedStyle.zIndex);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        const rect = returnPopup.getBoundingClientRect();
  // console.log('üé¨ returnPopup bounding rect:', rect);
  // console.log('üé¨ returnPopup is visible:', rect.width > 0 && rect.height > 0);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ª–∏ –ø–æ–ø–∞–ø –¥—Ä—É–≥–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        const elementsAtPoint = document.elementsFromPoint(rect.left + rect.width / 2, rect.top + rect.height / 2);
  // console.log('üé¨ Elements at popup center:', elementsAtPoint);
        const isOnTop = elementsAtPoint[0] === returnPopup;
  // console.log('üé¨ Popup is on top:', isOnTop);
      }, 100);
      
      // –ü–û–ö–ê–ó–´–í–ê–ï–ú –¢–ï–ö–°–¢–û–í–´–ô –û–í–ï–†–õ–ï–ô –° –ö–ù–û–ü–ö–ê–ú–ò –ü–†–ò –û–¢–ö–†–´–¢–ò–ò –ü–û–ü–ê–ü–ê
      const textOverlay = returnPopup.querySelector('.vsl-text-overlay');
  // console.log('üé¨ textOverlay element:', textOverlay);
      if (textOverlay) {
        textOverlay.style.display = 'flex';
  // console.log('üé¨ textOverlay shown');
      } else {
  // console.error('‚ùå textOverlay not found!');
      }
    } else {
  // console.error('‚ùå returnPopup element not found!');
    }
    
    if (returnVideo) {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤–∏–¥–µ–æ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞
      returnVideo.currentTime = savedVideoTime;
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –æ–±—Ö–æ–¥–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
      startAutoplayWithBypass(returnVideo);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ø–∞–ø –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∏–Ω—É—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ –≤–∏–¥–µ–æ
      if (window.setupVslTimePopup) {
        window.setupVslTimePopup(returnVideo);
      }

      // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞ –∫–æ–≥–¥–∞ –≤–∏–¥–µ–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
      returnVideo.addEventListener('ended', function() {
        if (window.showOrderFormModal) {
          window.showOrderFormModal();
        }
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–æ—Ä–º—ã
        if (window.startGlobalTimers) {
          window.startGlobalTimers();
        }
      });
    }
  }

  function hideReturnPopup() {
  // console.log('üîí hideReturnPopup called');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
    if (returnVideo) {
      saveVideoTime();
    }
    
    if (returnPopup) {
  // console.log('üîí Hiding returnPopup');
      returnPopup.style.display = 'none';
    } else {
  // console.error('‚ùå returnPopup element not found in hideReturnPopup');
    }
    
    if (returnVideo) {
      returnVideo.pause();
    }
    
    // –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º VSL –≤ —á–∞—Ç–µ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–ø–∞–ø–∞
    // VSL –≤ —á–∞—Ç–µ –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É play
  }

  function saveVideoTime() {
    if (returnVideo) {
      savedVideoTime = returnVideo.currentTime;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –≤—Å–µ—Ö –ø–ª–µ–µ—Ä–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∞–º–æ–µ –ø–æ–∑–¥–Ω–µ–µ
      const chatVideo = document.getElementById('vslVideoInline');
      const fullscreenVideo = document.getElementById('fullscreenVideo');
      const returnVisitVideo = document.getElementById('returnVisitVideo');
      
      let maxTime = returnVideo.currentTime;
      let maxSource = 'return';
      
      if (chatVideo && chatVideo.currentTime > maxTime) {
        maxTime = chatVideo.currentTime;
        maxSource = 'chat';
      }
      
      if (fullscreenVideo && fullscreenVideo.currentTime > maxTime) {
        maxTime = fullscreenVideo.currentTime;
        maxSource = 'fullscreen';
      }
      
      if (returnVisitVideo && returnVisitVideo.currentTime > maxTime) {
        maxTime = returnVisitVideo.currentTime;
        maxSource = 'returnVisit';
      }
      
      localStorage.setItem('savedVideoTime', maxTime.toString());
  // console.log('üíæ ReturnPopup: Saved MAX video time from', maxSource, ':', maxTime, 'seconds');
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–ø–∞–ø–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∏–Ω—É—Ç–µ VSL
  function showReturnVslMidPopup() {
    const popup = document.getElementById('returnVslMidPopup');
    if (popup) {
      popup.style.display = 'block';
      popup.style.opacity = '1';
      popup.style.visibility = 'visible';
      popup.style.zIndex = '1000';
      
      const banner = popup.querySelector('.return-vsl-mid-banner');
      if (banner) {
        banner.style.zIndex = '1001';
      }
    }
  }



  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
  function showOrderFormModal() {
    const orderFormModal = document.getElementById('orderFormModal');
    if (orderFormModal) {
      orderFormModal.style.display = 'flex';
      setTimeout(() => {
        orderFormModal.classList.add('show');
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ñ–æ—Ä–º—ã
        if (window.startGlobalTimers) {
          window.startGlobalTimers();
        }
      }, 10);
    }
  }



  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫—Ä–µ—Å—Ç–∏–∫–∞ –≤ ReturnPopup
  const returnVslCloseBtn = document.getElementById('returnVslCloseBtn');
  if (returnVslCloseBtn) {
  // console.log('‚úÖ Return popup close button found and handler attached');
    
    returnVslCloseBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
  // console.log('‚ùå Return popup close button clicked');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –≤—ã–±–æ—Ä–∞, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
      if (window.showVslCloseChoicePopup) {
  // console.log('üéØ Calling showVslCloseChoicePopup');
        window.showVslCloseChoicePopup();
      } else {
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
  // console.log('‚ö†Ô∏è showVslCloseChoicePopup not available, closing popup directly');
        hideReturnPopup();
      }
    });
  } else {
  // console.error('‚ùå Return popup close button not found!');
  }



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
  function startAutoplayWithBypass(video) {
    if (!video) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    setupMobileVideoHandlers(video);
    
    video.muted = true;
    video.play().then(() => {
      video.muted = false;
    }).catch((error) => {
      setTimeout(() => {
        video.muted = true;
        video.play().then(() => {
          video.muted = false;
        }).catch((error2) => {
          setupUserInteractionAutoplay(video);
        });
      }, 500);
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –≤–∏–¥–µ–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  function setupMobileVideoHandlers(video) {
    if (!video) return;
    
    let isStalled = false;
    let stallTimeout = null;
    let retryCount = 0;
    const maxRetries = 3;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏–∏
    video.addEventListener('waiting', function() {
  // console.log('‚è≥ Return video is waiting for data...');
      isStalled = true;
      
      if (stallTimeout) {
        clearTimeout(stallTimeout);
      }
      
      stallTimeout = setTimeout(() => {
        if (isStalled && retryCount < maxRetries) {
  // console.log('üîÑ Return video: attempting to recover from stall...');
          retryCount++;
          
          const currentTime = video.currentTime;
          video.load();
          video.currentTime = currentTime;
          
          if (!video.paused) {
            video.play().catch(error => {
  // console.log('‚ùå Return video: failed to recover from stall:', error.name);
            });
          }
        }
      }, 3000);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏
    video.addEventListener('canplay', function() {
      if (isStalled) {
  // console.log('‚úÖ Return video recovered from stall');
        isStalled = false;
        retryCount = 0;
        
        if (stallTimeout) {
          clearTimeout(stallTimeout);
          stallTimeout = null;
        }
      }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    video.addEventListener('suspend', function() {
  // console.log('‚è∏Ô∏è Return video loading suspended');
      setTimeout(() => {
        if (video.paused && !video.ended) {
          video.play().catch(error => {
  // console.log('‚ùå Return video: failed to resume after suspend:', error.name);
          });
        }
      }, 1000);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    video.addEventListener('error', function(e) {
  // console.log('‚ùå Return video error:', e);
      if (retryCount < maxRetries) {
        retryCount++;
  // console.log(`üîÑ Return video: retrying playback (attempt ${retryCount}/${maxRetries})...`);
        
        setTimeout(() => {
          const currentTime = video.currentTime;
          video.load();
          video.currentTime = currentTime;
          
          if (!video.paused) {
            video.play().catch(error => {
  // console.log('‚ùå Return video: retry failed:', error.name);
            });
          }
        }, 2000);
      }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (typeof document.hidden !== 'undefined') {
      document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
  // console.log('üëÅÔ∏è Page hidden, pausing return video');
          if (!video.paused) {
            video.pause();
          }
        } else {
  // console.log('üëÅÔ∏è Page visible, resuming return video');
          if (video.paused && !video.ended) {
            setTimeout(() => {
              video.play().catch(error => {
  // console.log('‚ùå Return video: failed to resume after page visible:', error.name);
              });
            }, 500);
          }
        }
      });
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞
    window.addEventListener('focus', function() {
      if (document.hasFocus()) {
  // console.log('üéØ Window focused, checking return video state');
        if (video.paused && !video.ended && !isStalled) {
          setTimeout(() => {
            video.play().catch(error => {
  // console.log('‚ùå Return video: failed to resume after focus:', error.name);
            });
          }, 300);
        }
      }
    });
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è iOS Safari
    if (/iPad|iPhone|iPod/.test(navigator.userAgent) && /Safari/.test(navigator.userAgent)) {
  // console.log('üçé iOS Safari detected for return video, applying special handlers');
      
      let wasPlayingBeforeLock = false;
      
      document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
          wasPlayingBeforeLock = !video.paused;
        } else {
          if (wasPlayingBeforeLock) {
  // console.log('üîì iOS: Screen unlocked, resuming return video');
            setTimeout(() => {
              video.play().catch(error => {
  // console.log('‚ùå iOS: Failed to resume return video after unlock:', error.name);
              });
            }, 1000);
            wasPlayingBeforeLock = false;
          }
        }
      });
      
      window.addEventListener('blur', function() {
        wasPlayingBeforeLock = !video.paused;
      });
      
      window.addEventListener('focus', function() {
        if (wasPlayingBeforeLock) {
  // console.log('üì± iOS: App focused, resuming return video');
          setTimeout(() => {
            video.play().catch(error => {
  // console.log('‚ùå iOS: Failed to resume return video after app focus:', error.name);
            });
          }, 500);
          wasPlayingBeforeLock = false;
        }
      });
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function setupUserInteractionAutoplay(video) {
    let hasUserInteracted = false;
    
    const playButton = document.createElement('div');
    playButton.style.cssText = `
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: transparent;
      cursor: pointer;
      z-index: 1000;
    `;
    playButton.innerHTML = `
      <div style="
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 20px 40px;
        border-radius: 10px;
        font-size: 18px;
        text-align: center;
        pointer-events: none;
      ">
        ‚ñ∂Ô∏è –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      </div>
    `;
    
    playButton.onclick = () => {
      if (!hasUserInteracted) {
        hasUserInteracted = true;
        playButton.remove();
        video.muted = false;
        video.play();
      }
    };
    
    const interactionEvents = ['click', 'touchstart', 'keydown', 'mousedown'];
    interactionEvents.forEach(event => {
      playButton.addEventListener(event, () => {
        if (!hasUserInteracted) {
          hasUserInteracted = true;
          playButton.remove();
          video.muted = false;
          video.play();
        }
      });
    });
    
    returnPopup.appendChild(playButton);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  window.showReturnPopup = showReturnPopup;
  window.hideReturnPopup = hideReturnPopup;
  window.saveVideoTime = saveVideoTime;
  window.showReturnVslMidPopup = showReturnVslMidPopup;
  window.showOrderFormModal = showOrderFormModal;
  
  // –ñ–¥–µ–º, –ø–æ–∫–∞ —Ñ—É–Ω–∫—Ü–∏—è showVslCloseChoicePopup —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–π
  function waitForVslCloseChoicePopup() {
    if (window.showVslCloseChoicePopup) {
  // console.log('‚úÖ showVslCloseChoicePopup is now available');
      return;
    }
    
    setTimeout(waitForVslCloseChoicePopup, 100);
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
  waitForVslCloseChoicePopup();
  
  // –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ø–∞–ø–∞
  window.testReturnPopup = function() {
  // console.log('üß™ Testing ReturnPopup...');
  // console.log('üß™ returnPopup element:', returnPopup);
  // console.log('üß™ returnVideo element:', returnVideo);
  // console.log('üß™ returnVslCloseBtn element:', returnVslCloseBtn);
    
    if (returnPopup) {
      const computedStyle = window.getComputedStyle(returnPopup);
      // console.log('üß™ returnPopup computed styles:', {
      //   display: computedStyle.display,
      //   visibility: computedStyle.visibility,
      //   opacity: computedStyle.opacity,
      //   zIndex: computedStyle.zIndex,
      //   position: computedStyle.position
      // });
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø–∞–ø
    showReturnPopup();
  };
  
  // console.log('üé¨ ReturnPopup initialized. Use window.testReturnPopup() to test.');





  if (continueBtn) {
    continueBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è
      if (returnVideo) {
        saveVideoTime();
      }
      
      // –°–ö–†–´–í–ê–ï–ú –í–ï–°–¨ –¢–ï–ö–°–¢–û–í–´–ô –û–í–ï–†–õ–ï–ô –° –ö–ù–û–ü–ö–ê–ú–ò
      const textOverlay = document.querySelector('#returnPopup .vsl-text-overlay');
      if (textOverlay) {
        textOverlay.style.display = 'none';
      }
      
      // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–µ–æ
      if (returnVideo && returnVideo.paused) {
        returnVideo.play();
      }
    });
  }

  if (restartBtn) {
    restartBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      
      if (returnVideo) {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –Ω–∞ –Ω–∞—á–∞–ª–æ
        returnVideo.currentTime = 0;
        
        // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        savedVideoTime = 0;
        localStorage.removeItem('savedVideoTime');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞
        startAutoplayWithBypass(returnVideo);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ø–∞–ø –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∏–Ω—É—Ç–µ
        if (window.setupVslTimePopup) {
          window.setupVslTimePopup(returnVideo);
        }
      }
      
      // –°–ö–†–´–í–ê–ï–ú –í–ï–°–¨ –¢–ï–ö–°–¢–û–í–´–ô –û–í–ï–†–õ–ï–ô –° –ö–ù–û–ü–ö–ê–ú–ò
      const textOverlay = document.querySelector('#returnPopup .vsl-text-overlay');
      if (textOverlay) {
        textOverlay.style.display = 'none';
      }
    });
  }



  returnPopup?.addEventListener('click', (e) => {
    if (e.target === returnPopup) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –ø–æ–ø–∞–ø–∞
      if (returnVideo) {
        saveVideoTime();
      }
      
      hideReturnPopup();
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–æ–Ω–µ—Ç–∫—É (–ø—è—Ç–∞—è —Å—Ç–∞–¥–∏—è)
      if (window.showDomonetkaForm) {
        window.showDomonetkaForm();
      }
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è, –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–æ–Ω–µ—Ç–∫—É
  returnVideo?.addEventListener('click', () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –≤–∏–¥–µ–æ
    if (returnVideo) {
      saveVideoTime();
    }
    
    // –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–æ–Ω–µ—Ç–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –≤–∏–¥–µ–æ
    // –î–æ–º–æ–Ω–µ—Ç–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–∫—Ä—ã—Ç—å –ø–æ–ø–∞–ø (–∫–ª–∏–∫ –Ω–∞ —Ñ–æ–Ω)
  });

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ (–ø–µ—Ä–µ–º–æ—Ç–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞)
  if (returnVideo) {
    // –î–æ–±–∞–≤–ª—è–µ–º controls –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    returnVideo.controls = true;
    returnVideo.setAttribute('controlsList', 'nodownload nofullscreen noremoteplayback');
    
    returnVideo.addEventListener('contextmenu', (e) => {
      e.preventDefault();
      return false;
    });
    
    // console.log('‚úÖ Video seeking enabled for returnVideo');
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É—Ö–æ–¥–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  document.addEventListener('visibilitychange', () => {
    if (document.hidden) {
      saveVideoTime();
    }
  });

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –≤–∏–¥–µ–æ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –≤–æ –≤—Ä–µ–º—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
  setInterval(() => {
    if (returnVideo && !returnVideo.paused && returnVideo.currentTime > 0) {
      saveVideoTime();
    }
  }, 10000); // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É—Ö–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ VSL —É–∂–µ –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω)
  let hasShownVsl = false;
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ VSL
  window.addEventListener('vsl-opened', () => {
    hasShownVsl = true;
  });
  
  document.addEventListener('click', (e) => {
    if (e.target && e.target.closest('#popup')) {
      hasShownVsl = true;
    }
  });
  
  // Exit intent –æ—Ç–∫–ª—é—á–µ–Ω - –ø–æ–ø–∞–ø –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è
  // document.addEventListener('mouseleave', (e) => {
  //   if (e.clientY <= 0 && hasShownVsl) {
  //     showReturnPopup();
  //   }
  // });
  

</script>

<style>
  .return-popup-backdrop {
    position: fixed;
    inset: 0;
    background: #000;
    display: none;
    z-index: 1001; /* –í—ã—à–µ —á–µ–º fullscreen-player (z-index: 1000) */
  }

  .return-popup {
    position: fixed;
    inset: 0;
    background: #000;
    width: 100vw;
    height: 100vh;
  }

  .vsl-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .vsl-overlay {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .vsl-vignette {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, transparent 30%, rgba(0, 0, 0, 0.3) 100%);
    pointer-events: none;
    z-index: 2;
  }

  .vsl-overlay video {
    width: 100%;
    height: 100%;
    object-fit: contain; /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑ –æ–±—Ä–µ–∑–∞–Ω–∏—è */
    background: #000; /* –ß–µ—Ä–Ω—ã–π —Ñ–æ–Ω –¥–ª—è –ø—É—Å—Ç—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π */
  }

  .vsl-text-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px;
    background: rgba(0, 0, 0, 0.4);
    z-index: 3;
  }

  .popup-text {
    text-align: center;
    margin-bottom: 20px;
  }

  .popup-text h3 {
    margin: 0 0 8px 0;
    font-size: 20px;
    font-weight: 700;
    color: #ff4444;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
  }

  .popup-text p {
    margin: 0 0 6px 0;
    font-size: 14px;
    line-height: 1.3;
    color: #fff;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
  }

  .consequence {
    font-weight: 600;
    color: #ff4444;
  }

  .solution {
    font-weight: 600;
    color: #fff;
    font-size: 16px;
  }

  .highlight {
    font-weight: 700;
    color: #ff4444 !important;
    font-size: 16px !important;
    text-transform: uppercase;
    margin: 8px 0;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
  }

  .urgency {
    font-weight: 700;
    color: #ff4444 !important;
    font-size: 14px !important;
    text-transform: uppercase;
    margin: 8px 0;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);
  }

  .popup-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
    width: 100%;
    max-width: 250px;
  }

  .btn-primary {
    background: linear-gradient(135deg, #ff6b35, #ff4444);
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 8px;
    font-weight: 700;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 4px 12px rgba(255, 107, 53, 0.4);
    text-transform: uppercase;
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, #e55a2b, #e53935);
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(255, 107, 53, 0.6);
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.9);
    color: #333;
    border: 2px solid rgba(255, 255, 255, 0.3);
    padding: 12px 20px;
    border-radius: 8px;
    font-weight: 700;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s;
    backdrop-filter: blur(10px);
    text-transform: uppercase;
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 1);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }



  @media (max-width: 768px) {
    .vsl-text-overlay {
      padding: 15px;
    }

    .popup-text h3 {
      font-size: 18px;
    }

    .popup-text p {
      font-size: 12px;
    }

    .highlight {
      font-size: 14px !important;
    }

    .urgency {
      font-size: 12px !important;
    }

    .popup-buttons {
      max-width: 200px;
    }

    .btn-primary,
    .btn-secondary {
      padding: 10px 16px;
      font-size: 12px;
    }
  }

  /* –°—Ç–∏–ª–∏ –¥–ª—è –ø–æ–ø–∞–ø–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∏–Ω—É—Ç–µ VSL –≤ ReturnPopup */
  .return-vsl-mid-popup {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 10;
    pointer-events: none; /* –ü–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∏–∫–∞—Ç—å —á–µ—Ä–µ–∑ –ø–æ–ø–∞–ø –Ω–∞ –≤–∏–¥–µ–æ */
    background: transparent; /* –£–±–∏—Ä–∞–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ */
  }

  .return-vsl-mid-banner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: #4CAF50; /* –ú–µ–Ω–µ–µ —è—Ä–∫–∏–π –∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç */
    color: white;
    padding: 15px;
    text-align: center;
    font-weight: bold;
    font-size: 16px;
    z-index: 11;
    pointer-events: auto; /* –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–∞–Ω–Ω–µ—Ä–æ–º */
    position: relative;
  }

  .return-vsl-mid-vignette {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, transparent 30%, rgba(0, 0, 0, 0.3) 100%);
    pointer-events: none;
    z-index: 1;
  }

  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ –¥–ª—è –ø–µ—Ä–µ–º–æ—Ç–∫–∏ */
  #returnVslVideo::-webkit-media-controls-timeline,
  #returnVslVideo::-webkit-media-controls-seek-back-button,
  #returnVslVideo::-webkit-media-controls-seek-forward-button {
    display: block !important;
  }
  
  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è Firefox */
  #returnVslVideo::-moz-media-controls-timeline,
  #returnVslVideo::-moz-media-controls-seek-back-button,
  #returnVslVideo::-moz-media-controls-seek-forward-button {
    display: block !important;
  }
  
  /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º timeline –∏ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ */
  #returnVslVideo::-webkit-media-controls-timeline,
  #returnVslVideo::-webkit-media-controls-seek-back-button,
  #returnVslVideo::-webkit-media-controls-seek-forward-button {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    pointer-events: auto !important;
    width: auto !important;
    height: auto !important;
  }
  
  /* –†–∞–∑—Ä–µ—à–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∏–¥–µ–æ */
  .video-wrapper {
    pointer-events: auto !important;
    position: relative !important;
    width: 100% !important;
    height: 100% !important;
  }
  
  /* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */
  @media (max-width: 768px) {
    #returnVslVideo {
      /* –†–∞–∑—Ä–µ—à–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∏–¥–µ–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
      pointer-events: auto !important;
    }
    
    /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º timeline –∏ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */
    #returnVslVideo::-webkit-media-controls-timeline,
    #returnVslVideo::-webkit-media-controls-seek-back-button,
    #returnVslVideo::-webkit-media-controls-seek-forward-button {
      display: block !important;
      opacity: 1 !important;
      visibility: visible !important;
      pointer-events: auto !important;
    }
    
    .video-wrapper {
      /* –†–∞–∑—Ä–µ—à–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–∏–¥–µ–æ */
      overflow: visible !important;
      position: relative !important;
    }
  }
</style>
